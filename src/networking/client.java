/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package networking;

import java.awt.Event;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.Socket;

/**
 *
 * @author User
 */
public class client extends javax.swing.JFrame implements Runnable{
protected DataInputStream in;
protected DataOutputStream out;
protected Thread listener;



    /**
     * Creates new form client
     * 
     * @param title
     * @param i
     * @param o
     */
    public client(String title, InputStream i, OutputStream o) {        
        super(title);
        initComponents();
this.in = new DataInputStream (new BufferedInputStream (i));
    this.out = new DataOutputStream (new BufferedOutputStream (o));
    listener= new Thread(this);
    listener.start();
    }   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        input1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        display = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        input1.setBorder(null);
        input1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input1ActionPerformed(evt);
            }
        });
        input1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                input1KeyTyped(evt);
            }
        });

        display.setBackground(new java.awt.Color(47, 112, 142));
        display.setColumns(20);
        display.setRows(5);
        display.setText("\n");
        display.setBorder(null);
        display.setRequestFocusEnabled(false);
        jScrollPane1.setViewportView(display);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(input1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(input1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

@Override
    public void run() {
    //    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    
System.out.println("run");    
    try {
            while(true){
                String line = in.readUTF();
System.out.println("read");
                display.append(line + "\n");

            }
        } catch (Exception e) {
            e.printStackTrace();
        }finally{
        listener =null;
        input1.setEnabled(false);
        validate();
            try {
                out.close();
            } catch (Exception e) {
            e.printStackTrace();
            }
        }
    
    }
    
@Override
    public boolean handleEvent(Event e){
    if((e.target == input1) && (e.id == Event.ACTION_EVENT)){
        try {
            out.writeUTF((String) e.arg);
        } catch (IOException io) {
            io.printStackTrace();
            listener.stop();
        }
        input1.setText("");
        return true;
        
    } else if ((e.target == this) && (e.id == Event.WINDOW_DESTROY)){
if(listener !=null)
listener.stop();
    setVisible(false);
    return true;    }
   
System.out.println("handler");     
return  super.handleEvent(e);        
    }
    
    
    private void input1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input1ActionPerformed
            try {
            out.writeUTF((String) evt.getActionCommand());
        } catch (IOException io) {
            io.printStackTrace();
            listener.stop();
        }
        input1.setText("");
    }//GEN-LAST:event_input1ActionPerformed

    private void input1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_input1KeyTyped

    }//GEN-LAST:event_input1KeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
     
                  Socket  s = new Socket(InetAddress.getLocalHost().getHostAddress(), 8377);
    client client = new client("Ace Messenger ",
           s.getInputStream(),s.getOutputStream());client.setVisible(true);
    //client.setVisible(true);
    //</editor-fold>
 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea display;
    private javax.swing.JTextField input;
    private javax.swing.JTextField input1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
