package Main;


import java.awt.*;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.EOFException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.io.StringReader;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSeparator;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.border.LineBorder;
import javax.swing.text.BadLocationException;
import javax.swing.text.html.HTMLEditorKit;

/**
 *
 * @author User
 */
public class Messenger extends javax.swing.JFrame {

private JLabel tim;    static Point dragmouse;
 private ObjectOutputStream output;
 private ObjectInputStream input;
 private String message="";
 private String serverIP;
 private Socket connection;
 public String  ip;
JLabel searcharea;
JPanel menutabs;
private JSeparator Js;
int getnewId=0;
   java.util.List<String> menulister= new ArrayList<>();
JLabel[] menuLabel ;
 
 public Messenger(String host) {
     initComponents();
     this.serverIP=host;


     notification.setVisible(false);
//        display.setEditable(false);
display.setEditable(false);
display.setFocusable(false);
display.scrollRectToVisible(display.getVisibleRect());
display.setAutoscrolls(true);
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        sidebar = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        idfield = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel3 = new javax.swing.JLabel();
        menu = new javax.swing.JLabel();
        nocontact = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        loginuser = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        send = new javax.swing.JLabel();
        area = new javax.swing.JTextField();
        notification = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        display = new javax.swing.JEditorPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                formWindowLostFocus(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });

        sidebar.setFocusCycleRoot(true);
        sidebar.setFocusTraversalPolicyProvider(true);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        idfield.setFont(new java.awt.Font("Dialog", 0, 3)); // NOI18N
        idfield.setForeground(new java.awt.Color(255, 255, 255));
        idfield.setText(" ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(idfield, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(idfield)
                .addContainerGap())
        );

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Email_25px.png"))); // NOI18N

        menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/More_30px_2.png"))); // NOI18N
        menu.setToolTipText("Menu");
        menu.setOpaque(true);
        menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuMouseExited(evt);
            }
        });

        nocontact.setBackground(new java.awt.Color(0, 153, 153));
        nocontact.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        nocontact.setForeground(new java.awt.Color(195, 195, 195));
        nocontact.setText("No Contacts");
        nocontact.setFocusCycleRoot(true);
        nocontact.setFocusTraversalPolicyProvider(true);

        search.setBackground(new java.awt.Color(214, 217, 223));
        search.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        search.setForeground(new java.awt.Color(0, 102, 102));
        search.setText("Find contacts by username");
        search.setBorder(null);
        search.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchFocusLost(evt);
            }
        });
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(51, 51, 51));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 51, 51));
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Advertising_20px_1.png"))); // NOI18N
        jLabel7.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel7.setName(""); // NOI18N
        jLabel7.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        jLayeredPane1.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(menu, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(nocontact, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(search, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jSeparator1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(menu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(10, 10, 10)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(search, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(nocontact, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(menu)
                    .addComponent(jLabel7))
                .addGap(28, 28, 28)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(nocontact, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout sidebarLayout = new javax.swing.GroupLayout(sidebar);
        sidebar.setLayout(sidebarLayout);
        sidebarLayout.setHorizontalGroup(
            sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(sidebarLayout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        sidebarLayout.setVerticalGroup(
            sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidebarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane1)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel4.setBackground(new java.awt.Color(195, 195, 195));
        jPanel4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel4MouseDragged(evt);
            }
        });
        jPanel4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanel4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPanel4FocusLost(evt);
            }
        });
        jPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel4MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPanel4MouseReleased(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Delete_20px_1.png"))); // NOI18N
        jLabel1.setToolTipText("Close");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Minus Math _20px.png"))); // NOI18N
        jLabel2.setToolTipText("Minimise");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(28, 28, 28));
        jLabel6.setText("Ace Messenger - ");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/button-on-off (1).png"))); // NOI18N
        jLabel4.setText("jLabel4");
        jLabel4.setToolTipText("Logout");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel4MouseExited(evt);
            }
        });
        jLabel4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLabel4KeyPressed(evt);
            }
        });

        loginuser.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        loginuser.setForeground(new java.awt.Color(28, 28, 28));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Settings_25px_2.png"))); // NOI18N
        jLabel5.setToolTipText("Settings");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginuser, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(38, 38, 38)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addComponent(loginuser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        send.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/send-button.png"))); // NOI18N
        send.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sendMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                sendMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                sendMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                sendMousePressed(evt);
            }
        });

        area.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        area.setForeground(new java.awt.Color(155, 153, 156));
        area.setText("Type a message...");
        area.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 255, 255), 1, true));
        area.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                areaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                areaFocusLost(evt);
            }
        });
        area.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                areaMousePressed(evt);
            }
        });
        area.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                areaActionPerformed(evt);
            }
        });
        area.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                areaKeyReleased(evt);
            }
        });

        notification.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        notification.setForeground(new java.awt.Color(153, 153, 153));
        notification.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        notification.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 255, 102), 2, true));
        notification.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                notificationMousePressed(evt);
            }
        });

        display.setEditable(false);
        display.setBackground(new java.awt.Color(204, 255, 255));
        display.setBorder(null);
        display.setContentType("text/html"); // NOI18N
        display.setText("");
        display.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        display.setDoubleBuffered(true);
        display.setDragEnabled(true);
        display.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                displayMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(display);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(sidebar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(area, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(send, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(notification, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(notification, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                        .addGap(0, 0, 0)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(send, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(area, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(sidebar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked

    try {
    output.flush();
    input.close();
    output.close();
        connection.close();
    } catch (IOException ioException) {
    ioException.printStackTrace();
    }finally{
        System.exit(0);
    }
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
this.setState(ICONIFIED);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jPanel4MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseDragged
        Point currentpoint = evt.getLocationOnScreen();
        this.setLocation(currentpoint.x-dragmouse.x, currentpoint.y-dragmouse.y);
    }//GEN-LAST:event_jPanel4MouseDragged

    private void jPanel4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MousePressed
        dragmouse=evt.getPoint();
if(menu.getIcon().toString().contains("Menu%202_35px_1.png")) {
     
    
    SwingUtilities.invokeLater(new Runnable() {
        @Override
        public void run() {
            try {
                //       throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                
                menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/More_30px_2.png")));
                menu.setBackground(jLayeredPane1.getBackground());
                menutabs.setVisible(false);
                jLayeredPane1.remove(1);
                Thread.sleep(3);
            } catch (InterruptedException ex) {
                Logger.getLogger(Messenger.class.getName()).log(Level.SEVERE, null, ex);
            }
            
 revalidate();
    repaint();
        }
    });
            }
    }//GEN-LAST:event_jPanel4MousePressed

    private void jPanel4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseReleased

        dragmouse= null;

    }//GEN-LAST:event_jPanel4MouseReleased

    private void areaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_areaActionPerformed
        if (!area.getText().equals("")) {
            try {
                sendMessage(evt.getActionCommand());            
                area.setText("");
            } catch (BadLocationException ex) {
                Logger.getLogger(Messenger.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_areaActionPerformed

    public void startRunning(){    
        try {
            connectServer();
            setupStream();
            whileChatting();
            
        } catch (EOFException eofe) {
            notify("\n"+loginuser.getText()+" just logged out");
         eofe.printStackTrace();
         Logs(eofe.getLocalizedMessage() +"\n");
         closeConnection();
        }catch(IOException ioException){
        ioException.printStackTrace();
        Logs(ioException.getLocalizedMessage() +"\n");
        } catch (InterruptedException ex) {
       // Logger.getLogger(Messenger.class.getName()).log(Level.SEVERE, null, ex);
    ex.printStackTrace();
    Logs(ex.getLocalizedMessage()+"\n");
        } catch (BadLocationException ex) {
        Logger.getLogger(Messenger.class.getName()).log(Level.SEVERE, null, ex);
    }
        finally{
closeConnection();
        }
    }
   private void retryconnection(){

              Timer timer = new Timer();

    TimerTask task = new TimerTask(){
        private int i = 1;
        public void run(){
            if (i < 10) {
                notification.setText("Retrying connection to server..." + i++);
            }else if(i == 10){
                   try { 
                       connectServer();
                       setupStream();
                       whileChatting();
       } catch (Exception e) {
       e.printStackTrace();
       }finally{
                   closeConnection();
   
                   }
            }
        }
    };
    timer.scheduleAtFixedRate(task, 0, 1000); //1000ms = 1sec
   

   }
    
    private void connectServer() throws IOException, InterruptedException{
    notify("Attempting connection... \n");
      connection = new Socket(InetAddress.getByName(serverIP), 8377);
              
notify("Connected to: "+connection.getInetAddress().getHostAddress() +" on port "+connection.getPort());
    
    }

    
    
    
    private void setupStream() throws IOException, BadLocationException {
if(connection.isConnected()) {
    output= new ObjectOutputStream(connection.getOutputStream());
    output.writeObject(loginuser.getText() +":"+connection.getInetAddress().getHostAddress() );
    output.flush();
   
    input = new ObjectInputStream(connection.getInputStream());
    notify("\n Server Online \n");

}  
    
   DateFormat date = new SimpleDateFormat("yyyy MMMM dd",this.getLocale());
    Calendar c = Calendar.getInstance(this.getLocale());
/*
        String time = date.format("View history");
         tim = new JLabel(time);
        tim.setFont(new Font("Segoe UI",Font.PLAIN,16));
        tim.setBounds(120, 20, 200, 30);
        tim.setBackground(Color.white);
        tim.setVisible(true);
tim.setCursor(new Cursor(com.sun.glass.ui.Cursor.CURSOR_POINTING_HAND));
//tim.setBorder(new LineBorder(new Color(Integer.decode("#ddd")), 1, true));
        display.add(tim, BorderLayout.CENTER);
*/appends("<br>");appends("<br>");
appends("<span style='font-family:Segoe UI;font-size:8px'><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+date.format(c.getTime())+"</span>");

               makehistory("<span style='font-family:Segoe UI;font-size:8px'><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+date.format(c.getTime())+"</span>");
               
          String time = "View history";
         tim = new JLabel(time);
        tim.setFont(new Font("Segoe UI",Font.PLAIN,15));
        tim.setBounds(110, 10, 90,25);
        tim.setBackground(Color.white);
        tim.setVisible(false);
tim.setCursor(new Cursor(Cursor.HAND_CURSOR));
tim.setBorder(new LineBorder(new Color(Integer.decode("#2e808b")), 1, true));
        display.add(tim,display.getLayout());    
    
showHistoryBar();
tim.addMouseListener(new MouseListener() {
        @Override
        public void mouseClicked(MouseEvent e) {
            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
retriveHistory();
            for (int i = 0; i < display.getWidth(); i++) {
                tim.setBounds(i, i, i, i);
            }
        }

        @Override
        public void mousePressed(MouseEvent e) {
            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void mouseReleased(MouseEvent e) {
          //  throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void mouseEntered(MouseEvent e) {
        //    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void mouseExited(MouseEvent e) {
      //      throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }
    });

    }
    private void showHistoryBar(){
    FileInputStream fileInput;
        File checkFile= new File("./db32smird/ioeoreo/mnsas/1293943/mdsdsd");
        File[] listOfFiles= checkFile.listFiles();

        for (int i = 0; i < listOfFiles.length; i++) {
            
            if(listOfFiles[i].isFile()){
                
if(listOfFiles[i].getName().startsWith("chat") && listOfFiles[i].getName().endsWith(".aceDb")){
tim.setVisible(true);
}else{
tim.setVisible(false);
}
            }
}        
    }
    
    private void retriveHistory(){
        FileInputStream fileInput;
        File checkFile= new File("./db32smird/ioeoreo/mnsas/1293943/mdsdsd");
        File[] listOfFiles= checkFile.listFiles();
        
        
        DateFormat dft = new SimpleDateFormat("yyyy-MM-dd");
           Calendar cal = Calendar.getInstance(this.getLocale());
        
           
    for (File listOfFile : listOfFiles) {
        if (listOfFile.isFile()) {
            if (listOfFile.getName().startsWith("chat") && listOfFile.getName().endsWith(".aceDb")) {
                File m = new File(checkFile, listOfFile.getName());
                String getMessage;
                try {
                    fileInput = new FileInputStream(m);
                    BufferedReader buffer = new BufferedReader(new InputStreamReader(fileInput));
                    while((getMessage =buffer.readLine()) != null){
                        appends(getMessage);
                    }           if (listOfFile.length() >= 25000000) {
                        File Cinput = new File("./db32smird/ioeoreo/mnsas/1293943/mdsdsd");
                        Cinput.mkdirs();
                        File out = new File(Cinput,"/chatHistory "+dft.format(cal.getTime())+".aceDb");
                        
                        if(!Cinput.exists()|| !out.exists()){
                            Cinput.createNewFile();
                            out.createNewFile();
                        }                   }
                }catch (IOException ex) {
                    Logger.getLogger(Messenger.class.getName()).log(Level.SEVERE, null, ex);
                    System.out.println(ex.getCause());
                }catch (BadLocationException ex) {
                    Logger.getLogger(Messenger.class.getName()).log(Level.SEVERE, null, ex);
                    System.out.println(ex.getCause());
                }       } else {
            }
        }
    }
    /*
    HTMLEditorKit kit = (HTMLEditorKit) display.getEditorKit();
    StringReader reader = new StringReader(s);
    kit.read(reader, display.getDocument(), display.getDocument().getLength());
     */
  
    }
    
    private void  makehistory(String his) {
        try {
            
        FileOutputStream output;
            PrintWriter pw;
            FileWriter fw;
        DateFormat dft = new SimpleDateFormat("yyyy-MM-dd");
           Calendar cal = Calendar.getInstance(this.getLocale());
           
File Cinput = new File("./db32smird/ioeoreo/mnsas/1293943/mdsdsd");
if(!Cinput.exists()){
Cinput.mkdirs();
}
Cinput.setWritable(false);
Cinput.setReadOnly();
if(Cinput.getAbsoluteFile().equals(10)){
    
}



File out = new File(Cinput,"/chatHistory "+dft.format(cal.getTime())+".aceDb");
if(!Cinput.exists()){
Cinput.createNewFile();
}



if(!out.exists()){
    out.createNewFile();
byte[] history = his.getBytes();
output = new FileOutputStream(out);

output.write(history);
output.flush();
output.close();

}else if(out.exists() && out.getName().contains(dft.format(cal.getTime()))){
pw = new PrintWriter(new BufferedWriter(new FileWriter(out,true)));
pw.write(his);
pw.println();
pw.close();
}
        } catch (IOException e) {
        Logs(e.getLocalizedMessage()+"\n");
        }
    }
    
    
    // Making the TextArea
    public synchronized void appends(String s) throws IOException, BadLocationException{
    try{
    
        HTMLEditorKit kit = (HTMLEditorKit) display.getEditorKit();
        StringReader reader = new StringReader(s);  
        
        kit.read(reader, display.getDocument(), display.getDocument().getLength());
    kit.setLinkCursor(new Cursor(Cursor.HAND_CURSOR));
    
    }catch(BadLocationException e){
    e.printStackTrace();
    Logs(e.getLocalizedMessage() +"\n");
    }
    }
    
    private void  whileChatting() throws IOException, BadLocationException{
    ableToType(true);

    do{
        try {   
    
     if (connection.isConnected() && !connection.isClosed()) {
            message = input.readObject().toString();
          display.scrollRectToVisible(display.getVisibleRect());
          display.setAutoscrolls(true);
          
          appends(""+ message);
makehistory(message);          
          //  receiveMessage("\n" +message,1,30);
            notification.setVisible(false);
     }
     
        } catch (ClassNotFoundException e) {
        notify("\n ERROR: Invalid Message type");
    Logs(e.getMessage()+"\n");
closeConnection();
        }
    }while(!message.equalsIgnoreCase("SERVER-EXIT"));
    
    }
                         
    
    
private  void closeConnection(){     


    try {
        if (connection.isConnected() && !connection.isClosed()) {
            
        output.close();
        input.close();
        connection.close();
        notify("\n Closing connections...\n");
ableToType(false);
display.setText("");
area.setText("Type a message...");
        }
    } catch (IOException ioException) {
    ioException.printStackTrace();
    Logs(ioException.getMessage()+"\n");
     }finally{
            retryconnection();
    }
}

    //send message to client
    private synchronized    void sendMessage(String message) throws BadLocationException{
        notification.setVisible(false);
        display.setAutoscrolls(true);
        display.scrollRectToVisible(display.getVisibleRect());
        DateFormat h  = new SimpleDateFormat("hh:mm:ss",this.getLocale());
        Calendar cal = Calendar.getInstance(this.getLocale());
        Thread dadThread = new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    //       throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                    output.writeObject("\n"+loginuser.getText().trim() +" ("+h.format(cal.getTime())+" ) \n"+message+"\n");
                    output.flush();
                    appends("<div style='text-align:right'><b style='color:purple'>"+loginuser.getText().trim() +"</b>  <br><span style='font-size:7px;font-family:candara,color:rgba(168,168,168,0.1)'>"+h.format(cal.getTime())+"</span> "+message+"<br><br></div>");
                    makehistory("<div style='text-align:right'><b style='color:purple'>"+loginuser.getText().trim() +"</b>  <br><span style='font-size:7px;font-family:candara,color:rgba(168,168,168,0.1)'>"+h.format(cal.getTime())+"</span> "+message+"<br><br></div>");
                } catch (IOException ex) {
                    Logger.getLogger(Messenger.class.getName()).log(Level.SEVERE, null, ex);
                } catch (BadLocationException ex) {
                    Logger.getLogger(Messenger.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        });
        dadThread.start();
    }

    private void ableToType(final boolean b) {
 SwingUtilities.invokeLater( new Runnable() {
        @Override
        public void run() {
            area.setEditable(b);
        }
     });
    }
    
    //Menu Tab for with JlayeredPane COmponents
    private void menutab(){
 menutabs = new JPanel();
 

 String[] menuList ={
 "Search for new Ace users",
     "Contacts",
     "Create group chat"
 };
 
 ImageIcon[] menuIcons = {
 new ImageIcon(getClass().getResource("/img/add-user-button.png")),
          new ImageIcon(getClass().getResource("/img/Address_Book_20px.png")),
          new ImageIcon(getClass().getResource("/img/User Group Man Man_20px.png"))
                  ,
          
          new ImageIcon(getClass().getResource("/img/Sort Right_10px.png"))
 };
 
        menuLabel = new JLabel[menuList.length]; 

        new Thread(new Runnable() {
     @Override
     public void run() {
  
  try {
          

if(menu.getIcon().toString().contains("More_30px_2.png")){

menu.setBackground(new Color(210, 210, 215));
    menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Menu 2_35px_1.png")));
      
    for( double i = 0; i<=130;i++){
menutabs.setAlignmentX(0.5f);
menutabs.setAlignmentY(0.5f);
menutabs.setBackground(new Color(236, 238, 238));
menutabs.setVisible(true);
menutabs.setOpaque(true);
            menutabs.setBounds(menu.getX()+10, 38, (int)i++ +40,80);
jLayeredPane1.add(menutabs, new Integer(1));
            Thread.sleep(1);
        }
       
                for(String k : menuList){
       menulister.add(k);
                }

        for (int j = 0; j < menuList.length; j++) {
menuLabel[j]= new JLabel(menuList[j]);
menuLabel[j].setText(menulister.get(j));
menuLabel[j].setVisible(true);
menuLabel[j].setFont(new Font("Corbel", Font.PLAIN, 13));
menuLabel[j].setPreferredSize(new Dimension(menutabs.getWidth(),20));
menuLabel[j].setForeground(new Color(Integer.decode("#00011")));
menuLabel[j].setOpaque(true);
menuLabel[j].setHorizontalAlignment(SwingConstants.CENTER);
menuLabel[j].setBackground( menutabs.getBackground());
menuLabel[j].setIconTextGap(6);

/*
Js = new JSeparator();          
Js.setBackground(Color.black);
Js.setOrientation(SwingConstants.VERTICAL);
Js.setBounds(menutabs.getX(), menutabs.getY(), 5,menutabs.getHeight()-10);
Js.setVisible(true);
        menutabs.add(Js);
  */

 revalidate();
    repaint();   
switch(j){
    case 0:
        
menuLabel[0].setIcon(menuIcons[0]);
           
        menuLabel[j].addMouseListener(new MouseListener() {
    @Override
    public void mouseClicked(MouseEvent e) {
      //  throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
if(menu.getIcon().toString().contains("Menu%202_35px_1.png")) {
     
    
    SwingUtilities.invokeLater(new Runnable() {
        @Override
        public void run() {
            try {
                //       throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                
                menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/More_30px_2.png")));
                menu.setBackground(jLayeredPane1.getBackground());

                 
      AddUserUI searchUI = new AddUserUI();
searchUI.setLocation(400, 200);
 searchUI.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
 searchUI.setVisible(true);
 

                jLayeredPane1.remove(1);
                Thread.sleep(3);
            } catch (InterruptedException ex) {
                Logger.getLogger(Messenger.class.getName()).log(Level.SEVERE, null, ex);
            }
            
 validate();
    repaint();
        }
    });
    
        }
    }
 
    @Override
    public void mouseEntered(MouseEvent e) {
 /*       throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    menutabs.setBounds(menu.getX()+10, 38, menutabs.getWidth()+2,80);
 menuLabel[0].setFont(new Font("Corbel", Font.PLAIN, 14));
 */
        menuLabel[0].setBackground(new Color(214, 217, 223));
    }
    @Override
    public void mouseExited(MouseEvent e) {
   /*     throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    menutabs.setBounds(menu.getX()+10, 38, 130+10,80); 
   menuLabel[0].setFont(new Font("Corbel", Font.PLAIN, 13));
   */
   menuLabel[0].setBackground(menutabs.getBackground());
    }
    @Override
    public void mousePressed(MouseEvent e) {
    //    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseReleased(MouseEvent e) {
      //  throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
});
        break;
        
    case 1 :
        menuLabel[1].setIcon(menuIcons[1]);
        menuLabel[j].addMouseListener(new MouseListener() {
    @Override
    public void mouseClicked(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    
    }
 
    @Override
    public void mouseEntered(MouseEvent e) {
 //       throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
 //menuLabel[1].setFont(new Font("Corbel", Font.PLAIN, 14));
         menuLabel[1].setBackground(new Color(214, 217, 223));
    }
    @Override
    public void mouseExited(MouseEvent e) {
   //     throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    //menuLabel[1].setFont(new Font("Corbel", Font.PLAIN, 13));
          menuLabel[1].setBackground(menutabs.getBackground());
    }
    @Override
    public void mousePressed(MouseEvent e) {
      //  throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseReleased(MouseEvent e) {
    //    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
});
        
        break;
        
    case 2: 
        
menuLabel[2].setIcon(menuIcons[2]);
        menuLabel[j].addMouseListener(new MouseListener() {
    @Override
    public void mouseClicked(MouseEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    
    }
 
    @Override
    public void mouseEntered(MouseEvent e) {
 //       throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
 //menuLabel[2].setFont(new Font("Corbel", Font.PLAIN, 14));
         menuLabel[2].setBackground(new Color(214, 217, 223));
    }
    @Override
    public void mouseExited(MouseEvent e) {
   //     throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    //menuLabel[2].setFont(new Font("Corbel", Font.PLAIN, 13));
    
          menuLabel[2].setBackground(menutabs.getBackground());}
    @Override
    public void mousePressed(MouseEvent e) {
    //    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    
    }

    @Override
    public void mouseReleased(MouseEvent e) {
    //    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    
    }
});
        break; 
        default:
                     
            break;
}
menutabs.add(menuLabel[j]);
        }
        
     
 revalidate();
    repaint();      
} 
else
if(menu.getIcon().toString().contains("Menu%202_35px_1.png")) {
     
    
    SwingUtilities.invokeLater(new Runnable() {
        @Override
        public void run() {
            try {
                //       throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                
                menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/More_30px_2.png")));
                menu.setBackground(jLayeredPane1.getBackground());
                              jLayeredPane1.remove(1);
                Thread.sleep(3);
            } catch (InterruptedException ex) {
                Logger.getLogger(Messenger.class.getName()).log(Level.SEVERE, null, ex);
            }
            
 validate();
    repaint();
        }
    });
    
        }


      
    } catch (Exception e) {
    } 
     
     }
 }).start();
 
 revalidate();
    repaint();
    }
    
private void notify(final String text){
  
    SwingUtilities.invokeLater( new Runnable() {
        @Override   
        public void run() {            
           notification.setVisible(true);
            notification.setText(text);
        }
    });
}
    
//updates message
private void showMessage(final String text){
  
    SwingUtilities.invokeLater( new Runnable() {
        @Override   
        public void run() {            
            for(int i =0;i<text.length();i++){
            
            JLabel show = new JLabel();
            show.setVisible(true);
            JLabel jLabel5 = new JLabel(text);
            jLabel5.setVisible(true);
            jLabel5.setForeground(new Color(46, 97, 144));
            jLabel5.setSize(new Dimension(100, 30));
            jLabel5.setToolTipText(text);
                 javax.swing.GroupLayout displayLayout = new javax.swing.GroupLayout(display);
        display.setLayout(displayLayout);
        displayLayout.setHorizontalGroup(
            displayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, displayLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        displayLayout.setVerticalGroup(
            displayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
             )
        );
   
            }
            
            
        }
    });
}

//updates message
private void receiveMessage(final String text, final int width,final int space){
  
    SwingUtilities.invokeLater( new Runnable() {
        @Override   
        public void run() {            
            
            JLabel show = new JLabel();
            show.setVisible(true);
            JLabel jLabel7 = new JLabel(text);
            jLabel7.setVisible(true);
            jLabel7.setSize(new Dimension(width, 30));
            jLabel7.setForeground(new Color(178, 161, 69));
            
                 javax.swing.GroupLayout displayLayout = new javax.swing.GroupLayout(display);
        display.setLayout(displayLayout);
        displayLayout.setHorizontalGroup(
            displayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, displayLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        displayLayout.setVerticalGroup(
            displayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, space, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
             )
        );
   
        }
    });
}
    private void sendMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendMouseEntered
send.setIcon(new javax.swing.ImageIcon(getClass().getResource("img/send-button (1).png")));

    }//GEN-LAST:event_sendMouseEntered

    private void sendMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendMouseExited
        // TODO add your handling code here:
        send.setIcon(new javax.swing.ImageIcon(getClass().getResource("img/send-button.png")));
    }//GEN-LAST:event_sendMouseExited

    
protected void searchContacts() throws IOException{


        try {
            
        Class.forName("com.mysql.jdbc.Driver");
        String driver ="jdbc:mysql://127.0.0.1:3306/ace messenger";
        Statement st;
        ResultSet rs;
        
        try(Connection con = DriverManager.getConnection(driver,"ecobank","efemena1")){
            String stmt = "select * from users_details where username like ?";
            
            PreparedStatement ps = con.prepareStatement(stmt);
            ps.setString(1, "%"+search.getText()+"%");
            rs=ps.executeQuery();
           if(rs.next()){
               String getuser = rs.getString("username"); //       Logger.getLogger(Messenger.class.getName()).log(Level.SEVERE, null, ex);
               nocontact.setVisible(false);
               searcharea = new JLabel();
               searcharea.setBackground(Color.PINK);
               searcharea.setForeground(Color.WHITE);
               searcharea.setOpaque(true);
               searcharea.setVisible(true);
               searcharea.setText(getuser);
               searcharea.setBorder(null);
               searcharea.setBounds(sidebar.getX(),85,sidebar.getWidth(), 30);
               GroupLayout lay = new GroupLayout(sidebar);
               sidebar.setLayout(lay);
               lay.setHorizontalGroup(lay.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                       .addComponent(searcharea,GroupLayout.Alignment.CENTER)
                       .addGap(5,5,5)
               );
               lay.setVerticalGroup(lay.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               );
               searcharea.addMouseListener(new MouseAdapter() {
                   public void mouseClicked(MouseEvent e) {
                       JOptionPane.showMessageDialog(null, "clicked");
                   }
               });
           //    System.out.println("coool");
               repaint();
               
               
//display.append(getuser +" ");
    }
               
           }
           
        }
     catch (SQLException ex) {
//         Logger.getLogger(Messenger.class.getName()).log(Level.SEVERE, null, ex);
   Logs(ex.getMessage()+"\n");
     } catch (ClassNotFoundException ex) {  
       // Logger.getLogger(Messenger.class.getName()).log(Level.SEVERE, null, ex);
    }  
}    
    
    
    
    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        
    }//GEN-LAST:event_searchActionPerformed

    private void searchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFocusGained
if("Find contacts by username".equals(search.getText()) || "".equals(search.getText())){
search.setText("");
}else{
search.setText(search.getText());
}
    }//GEN-LAST:event_searchFocusGained

    private void searchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFocusLost
 if("".equals(search.getText())){
search.setText("Find contacts by username");
}
    }//GEN-LAST:event_searchFocusLost

    private void areaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_areaFocusGained
if("Type a message...".equals(area.getText()) || "".equals(area.getText())){
area.setText("");
area.setForeground(new Color(Integer.decode("#5D5B5E")));
}else{
area.setText(area.getText());
}

    }//GEN-LAST:event_areaFocusGained

    private void areaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_areaFocusLost
 if("".equals(area.getText())){
area.setText("Type a message...");
area.setForeground(new Color(155,153,156));

}
    }//GEN-LAST:event_areaFocusLost

    private void jLabel4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseEntered

        try {
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("img/button-on-off.png")));            
        } catch (Exception e) {
e.printStackTrace();
        }

    }//GEN-LAST:event_jLabel4MouseEntered

    private void jLabel4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseExited
        try {
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("img/button-on-off (1).png")));    
        } catch (Exception e) {
        }
        
    }//GEN-LAST:event_jLabel4MouseExited

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked

DateFormat dateformat = new SimpleDateFormat("yyyy-MM-dd HH-mm-ss");
    Calendar cal = Calendar.getInstance();
    try {
        Class.forName("com.mysql.jdbc.Driver");
        String driver ="jdbc:mysql://127.0.0.1:3306/ace messenger";
         Statement st;
        ResultSet rs;
        
        try(Connection con = DriverManager.getConnection(driver,"ecobank","efemena1")){
            String stmt = "select user_Id from users_details where user_Id=?";
            
            PreparedStatement ps = con.prepareStatement(stmt);
            ps.setInt(1, Integer.parseInt(idfield.getText().trim()));
            rs=ps.executeQuery();
           
            if(rs.getRow() <= 0 && rs.next()){
            getnewId=rs.getInt("user_id");
                String update ="update login_activities set logged_out_time=?"+"where user_Id=?";
                PreparedStatement pst = con.prepareStatement(update);
                pst.setString(1, dateformat.format(cal.getTime()));
                pst.setInt(2, Integer.parseInt(idfield.getText().trim()));
                pst.executeUpdate();
                
                 if(pst.executeUpdate() > 0){
                  SwingUtilities.invokeLater(new Runnable() {
                  @Override
                  public void run() {
                      dispose();
                  new login().setVisible(true);
                  }
                  });  
                  }
                  else{

                 }
            }else{

            }

        }
        
    } catch (ClassNotFoundException | SQLException e) {
        e.printStackTrace();
        Logs(e.getMessage()+"\n");
    }
        
        
        


    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel4KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel4KeyPressed

    private void sendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendMouseClicked
area.setText("");
if(!area.getText().equals("")){
    try {
        sendMessage(area.getText());
    } catch (BadLocationException ex) {
        Logger.getLogger(Messenger.class.getName()).log(Level.SEVERE, null, ex);
    }
}
    }//GEN-LAST:event_sendMouseClicked

    private void jPanel4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel4FocusGained

    }//GEN-LAST:event_jPanel4FocusGained

    private void jPanel4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel4FocusLost

    }//GEN-LAST:event_jPanel4FocusLost

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
jPanel4.setBackground(new Color(195,195,195));
    }//GEN-LAST:event_formWindowGainedFocus

    private void formWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowLostFocus
jPanel4.setBackground(Color.white);
    }//GEN-LAST:event_formWindowLostFocus

    private void menuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuMouseClicked
menutab();
    }//GEN-LAST:event_menuMouseClicked

    private void menuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuMouseEntered
menu.setBackground(new Color(210, 210, 215));
//menutab();
    }//GEN-LAST:event_menuMouseEntered

    private void menuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuMouseExited
//menu.setBackground(jLayeredPane1.getBackground());
/*
if(menu.getIcon().toString().contains("Menu%202_35px_1.png")) {
    try {
        menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/More_30px_2.png")));
        jLayeredPane1.remove(1);
        Thread.sleep(2);
    } catch (InterruptedException ex) {
        Logger.getLogger(Messenger.class.getName()).log(Level.SEVERE, null, ex);
    }
        }
 

 validate();
    repaint();      
*/
    }//GEN-LAST:event_menuMouseExited

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
if(menu.getIcon().toString().contains("Menu%202_35px_1.png")) {
     
    SwingUtilities.invokeLater(new Runnable() {
        @Override
        public void run() {
            try {
                //       throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                
                menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/More_30px_2.png")));
                menu.setBackground(jLayeredPane1.getBackground());
                menutabs.setVisible(false);
                jLayeredPane1.remove(1);
                Thread.sleep(3);
            } catch (InterruptedException ex) {
                Logger.getLogger(Messenger.class.getName()).log(Level.SEVERE, null, ex);
            }
            
 revalidate();
    repaint();
        }
    });
            }
    }//GEN-LAST:event_jPanel1MousePressed

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_formMousePressed

    private void displayMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_displayMousePressed
if(menu.getIcon().toString().contains("Menu%202_35px_1.png")) {
     
    
    SwingUtilities.invokeLater(new Runnable() {
        @Override
        public void run() {
            try {
                //       throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                
                menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/More_30px_2.png")));
                menu.setBackground(jLayeredPane1.getBackground());
                menutabs.setVisible(false);
                jLayeredPane1.remove(1);
                Thread.sleep(3);
            } catch (InterruptedException ex) {
                Logger.getLogger(Messenger.class.getName()).log(Level.SEVERE, null, ex);
            }
            
 revalidate();
    repaint();
        }
    });
            }
    }//GEN-LAST:event_displayMousePressed

    private void notificationMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_notificationMousePressed
if(menu.getIcon().toString().contains("Menu%202_35px_1.png")) {
     
    
    SwingUtilities.invokeLater(new Runnable() {
        @Override
        public void run() {
            try {
                //       throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                
                menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/More_30px_2.png")));
                menu.setBackground(jLayeredPane1.getBackground());
                menutabs.setVisible(false);
                jLayeredPane1.remove(1);
                Thread.sleep(3);
            } catch (InterruptedException ex) {
                Logger.getLogger(Messenger.class.getName()).log(Level.SEVERE, null, ex);
            }
            
 revalidate();
    repaint();
        }
    });
            }
    }//GEN-LAST:event_notificationMousePressed

    private void areaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_areaMousePressed
if(menu.getIcon().toString().contains("Menu%202_35px_1.png")) {
     
    
    SwingUtilities.invokeLater(new Runnable() {
        @Override
        public void run() {
            try {
                //       throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                
                menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/More_30px_2.png")));
                menu.setBackground(jLayeredPane1.getBackground());
                menutabs.setVisible(false);
                jLayeredPane1.remove(1);
                Thread.sleep(3);
            } catch (InterruptedException ex) {
                Logger.getLogger(Messenger.class.getName()).log(Level.SEVERE, null, ex);
            }
            
 revalidate();
    repaint();
        }
    });
            }
    }//GEN-LAST:event_areaMousePressed

    private void sendMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendMousePressed
if(menu.getIcon().toString().contains("Menu%202_35px_1.png")) {
     
    
    SwingUtilities.invokeLater(new Runnable() {
        @Override
        public void run() {
            try {
                //       throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                
                menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/More_30px_2.png")));
                menu.setBackground(jLayeredPane1.getBackground());
                menutabs.setVisible(false);
                jLayeredPane1.remove(1);
                Thread.sleep(3);
            } catch (InterruptedException ex) {
                Logger.getLogger(Messenger.class.getName()).log(Level.SEVERE, null, ex);
            }
            
 revalidate();
    repaint();
        }
    });
            }
    }//GEN-LAST:event_sendMousePressed

    private void areaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_areaKeyReleased
    try {
//code for typing...        
   int count =1;

if(evt.getKeyCode()!=KeyEvent.VK_ENTER){

    
   if(count==1){
    output.writeObject( loginuser.getText()+" is typing...");
output.flush();
count++;
   }
   else if(count >1){
   //do nothing
   }
evt.consume();
}else if(evt.getKeyCode()==KeyEvent.VK_ENTER){

}

/*switch(evt.getKeyCode()){
            case KeyEvent.VK_ENTER:
     {
      
     }
                break;                
            default:
break;
     }
  */      
    } catch (IOException ex) {
        Logger.getLogger(Messenger.class.getName()).log(Level.SEVERE, null, ex);
    }

    }//GEN-LAST:event_areaKeyReleased
 public static void main(String[] args) throws ClassNotFoundException, UnknownHostException, UnsupportedLookAndFeelException {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
//            Logger.getLogger(runmessenger.class.getName()).log(Level.SEVERE, null, ex);
        }
 
        new Thread(new Runnable() {
            @Override
            public void run() {
    //            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
      
                Messenger run = null;
    try {
        run = new Messenger(InetAddress.getLocalHost().getHostAddress());
       
    } catch (UnknownHostException ex) {
   //     Logger.getLogger(Messenger.class.getName()).log(Level.SEVERE, null, ex);
    }
    if(!run.loginuser.equals("")){
      run.setVisible(true);
      run.setLocation(400, 200); 
       run.startRunning();
}else{
new login().setVisible(true);
}
  
    
            }
        }).start();
    }
 
 public final void Logs(String logs) {

  FileDialog fd;
  File f;
     FileInputStream fis;
     FileOutputStream fos;
     BufferedOutputStream bos;
ObjectOutputStream obs;
        try {
            File makdir = new File("./logs");
            makdir.mkdir();
           
         f = new File(makdir,"AceMessengerRuntimeLogs.txt");   
         if(!f.exists() || !makdir.exists()){
         f.createNewFile();
         makdir.createNewFile();
         }
         
         byte[] filebyte = logs.getBytes();
            fos = new FileOutputStream(f);
        fos.write(filebyte);
            fos.flush();
            fos.close();
            
        } catch (FileNotFoundException ex) {
    //        Logger.getLogger(Messenger.class.getName()).log(Level.SEVERE, null, ex);
            
        } catch (IOException ex) {
   //         Logger.getLogger(Messenger.class.getName()).log(Level.SEVERE, null, ex);
            Logs(ex.getMessage()+" \n");
        }
    
     
     
     
 }
 
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField area;
    private javax.swing.JEditorPane display;
    public javax.swing.JLabel idfield;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    public javax.swing.JLabel loginuser;
    private javax.swing.JLabel menu;
    private javax.swing.JLabel nocontact;
    public javax.swing.JLabel notification;
    public javax.swing.JTextField search;
    private javax.swing.JLabel send;
    private javax.swing.JPanel sidebar;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the ip
     */
}
